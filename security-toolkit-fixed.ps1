# Windows Security Toolkit
# (Hacker temalı güvenlik aracı PowerShell)

# Gereksinim Kontrolü
function Test-Tool {
    param ($toolName)
    $null = Get-Command $toolName -ErrorAction SilentlyContinue
    return $?
}

function Check-Dependencies {
    Write-Host "Checking required tools..."

    $tools = @("nmap", "nikto", "sqlmap", "curl", "hashcat", "whois", "dig", "theHarvester", "sublist3r", "sherlock", "python")
    $missing = @()

    foreach ($tool in $tools) {
        if (-not (Test-Tool $tool)) {
            $missing += $tool
        }
    }

    if ($missing.Count -gt 0) {
        Write-Host "Missing tools: $($missing -join ', ')"
        Write-Host "You can install them via:"
        Write-Host "choco install nmap nikto sqlmap curl hashcat"
        Write-Host "pip install theHarvester sublist3r sherlock-project"
        Start-Sleep 3
    } else {
        Write-Host "All required tools are installed."
    }
}

# Port Tarama Fonksiyonu
function Port-Scan {
    param ($target)

    Write-Host "Select Scan Type:"
    Write-Host "1) Quick Scan"
    Write-Host "2) Full Scan"
    Write-Host "3) Stealth Scan"
    Write-Host "4) Aggressive Scan"
    $scanType = Read-Host "Enter choice (1-4)"

    switch ($scanType) {
        "1" { nmap -T4 -F $target }
        "2" { nmap -T4 -p- $target }
        "3" { nmap -sS -T4 -F $target }
        "4" { nmap -A -T4 -F $target }
        default { nmap -T4 -F $target }
    }
}

# Subdomain Enumeration
function Subdomain-Enum {
    param ($target)

    if (-not (Test-Tool "python")) {
        Write-Host "Python is required for Subdomain Enumeration."
        return
    }

    Write-Host "Running Subdomain Enumeration tools..."
    theHarvester -d $target -b all
    sublist3r -d $target
}

# Email Harvesting
function Email-Harvest {
    param ($target)

    if (-not (Test-Tool "python")) {
        Write-Host "Python is required for Email Harvesting."
        return
    }

    Write-Host "Running Email Harvesting tool..."
    theHarvester -d $target -b all
}

# Username Search
function Username-Search {
    param ($username)

    if (-not (Test-Tool "python")) {
        Write-Host "Python is required for Username Search."
        return
    }

    Write-Host "Running Username Search tool..."
    sherlock $username
}

# Report Generation
function Generate-Report {
    param ($target)

    $whoisInfo = whois $target
    $nslookupInfo = nslookup $target
    $nmapInfo = nmap -T4 --top-ports 1000 $target

    $reportFile = "$target-security-report.txt"

    @"
Security Assessment Report
=========================
Target: $target
Date: $(Get-Date)
Generated by: Windows Security Toolkit

WHOIS Information:
$whoisInfo

DNS Records:
$nslookupInfo

Open Ports:
$nmapInfo
"@ | Out-File -FilePath $reportFile

    Write-Host "Report generated: $reportFile"
}

# Ana Menü
function Main {
    Check-Dependencies

    while ($true) {
        Write-Host ""
        Write-Host "Windows Security Toolkit"
        Write-Host "1) Port Scan"
        Write-Host "2) Subdomain Enumeration"
        Write-Host "3) Email Harvesting"
        Write-Host "4) Username Search"
        Write-Host "5) Generate Report"
        Write-Host "6) Exit"
        $choice = Read-Host "Select an option"

        switch ($choice) {
            "1" {
                $target = Read-Host "Enter target IP or domain"
                Port-Scan $target
            }
            "2" {
                $target = Read-Host "Enter target domain"
                Subdomain-Enum $target
            }
            "3" {
                $target = Read-Host "Enter target domain"
                Email-Harvest $target
            }
            "4" {
                $username = Read-Host "Enter username"
                Username-Search $username
            }
            "5" {
                $target = Read-Host "Enter target domain"
                Generate-Report $target
            }
            "6" {
                Write-Host "Exiting..."
                exit 0
            }
            default {
                Write-Host "Invalid selection, try again."
            }
        }
    }
}

# Script çalıştırıldığında Main fonksiyonunu çağır
Main
